#include <MFRC522.h>
#include <LiquidCrystal_I2C.h>
#include <Keypad.h>

LiquidCrystal_I2C lcd(0x27, 16, 2);
MFRC522 mfrc522(10, 9);
constexpr uint8_t buzzerPin = 5;

char initial_password[7];
char additional_passwords[2][7];
String additional_tags[2];
int additional_password_count = 0;

String masterTagUID = "";
char password[7];
boolean RFIDMode = true;
boolean addPasswordMode = false;
boolean deleteTagMode = false; // Biến để theo dõi chế độ xóa thẻ phụ
char newPassword[7];
uint8_t i = 0;
boolean doorOpened = false;
int incorrectAttemptCount = 0;

const byte rows = 4;
const byte columns = 3;

char hexaKeys[rows][columns] = {
  {'1', '2', '3'},
  {'4', '5', '6'},
  {'7', '8', '9'},
  {'*', '0', '#'}
};

byte row_pins[rows] = {A0, A1, A2, A3};
byte column_pins[columns] = {2, 1, 0};

Keypad keypad_key = Keypad(makeKeymap(hexaKeys), row_pins, column_pins, rows, columns);

void setup() {
  pinMode(buzzerPin, OUTPUT);
  lcd.init();
  lcd.backlight();
  mfrc522.PCD_Init();
  lcd.clear();
}

void beep(uint16_t duration) {
  digitalWrite(buzzerPin, HIGH);
  delay(duration);
  digitalWrite(buzzerPin, LOW);
}

void openDoor() {
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Mo Cua...");
  beep(100);
  delay(3000);
  doorOpened = true;
  i = 0;
  incorrectAttemptCount = 0;
  RFIDMode = false;
}

boolean checkPassword(char* input_password) {
  if (strncmp(input_password, initial_password, 7) == 0) {
    return true;
  }
  for (int j = 0; j < additional_password_count; j++) {
    if (strncmp(input_password, additional_passwords[j], 7) == 0) {
      return true;
    }
  }
  return false;
}

void addPassword() {
  if (i >= 6) { // Kiểm tra độ dài mật khẩu hợp lệ
    if (additional_password_count < 2) {
      strncpy(additional_passwords[additional_password_count], newPassword, 6);
      additional_passwords[additional_password_count][7] = '\0';
      additional_password_count++;
      lcd.clear();
      lcd.print("Mat Khau Da Them");
      delay(2000);
    } else {
      lcd.clear();
      lcd.print("Da Dat Gioi Han");
      delay(2000);
    }
  } else {
    lcd.clear();
    lcd.print("Mat Khau Khong Hop Le");
    delay(2000);
  }
  i = 0;
}

void addTag(String tagToAdd) {
  // Kiểm tra xem thẻ vừa quét có trùng với thẻ chính không
  if (tagToAdd == masterTagUID) {
    lcd.clear();
    lcd.print("Khong The Them");
    delay(2000);
    return;
  }

  // Kiểm tra xem thẻ đã tồn tại trong danh sách thẻ phụ chưa
  for (int j = 0; j < additional_password_count; j++) {
    if (additional_tags[j] == tagToAdd) {
      lcd.clear();
      lcd.print("The Da Ton Tai");
      delay(2000);
      return;
    }
  }

  // Thêm thẻ nếu vẫn còn chỗ trống
  if (additional_password_count < 2) {
    additional_tags[additional_password_count] = tagToAdd;
    additional_password_count++;
    lcd.clear();
    lcd.print("Them The Thanh Cong");
    delay(2000);
  } else {
    lcd.clear();
    lcd.print("Da Dat Gioi Han");
    delay(2000);
  }
}

void setMasterTag() {
  lcd.clear();
  lcd.print("Quet The Chinh:");
  if (mfrc522.PICC_IsNewCardPresent() && mfrc522.PICC_ReadCardSerial()) {
    String tag = "";
    for (byte j = 0; j < mfrc522.uid.size; j++) {
      tag.concat(String(mfrc522.uid.uidByte[j], HEX));
    }
    tag.toUpperCase();
    
    masterTagUID = tag;
    mfrc522.PICC_HaltA();
    lcd.clear();
    lcd.print("Da Luu The Chinh");
    delay(2000);
  }
}

void setInitialPassword() {
  lcd.clear();
  lcd.print("Nhap Mat Khau:");
  i = 0;
  while (i < 8) {
    char key_pressed = keypad_key.getKey();
    if (key_pressed && key_pressed != '*' && key_pressed != '#') {
      initial_password[i] = key_pressed;
      i++;
      initial_password[i] = '\0';
      lcd.setCursor(i, 1);
      lcd.print('*');
    } else if (key_pressed == '#') {
      if (i >= 4) { // Đảm bảo mật khẩu có ít nhất 4 ký tự
        break;
      } else {
        lcd.clear();
        lcd.print("Mat Khau Khong Hop Le");
        delay(2000);
        lcd.clear();
        lcd.print("Nhap Lai Mat Khau:");
        i = 0; // Reset nhập mật khẩu
      }
    }
  }
}

void lockDoor() {
  lcd.clear();
  lcd.print("Cua Da Khoa");
  lcd.setCursor(0, 1);
  lcd.print("Vui Long Quet The");
  
  for (int j = 0; j < 5; j++) {
    beep(100);
    delay(1000);
  }
}

void deleteTag(String tagToDelete) {
  boolean found = false;
  for (int j = 0; j < additional_password_count; j++) {
    if (additional_tags[j] == tagToDelete) {
      found = true;
      for (int k = j; k < additional_password_count - 1; k++) {
        strcpy(additional_passwords[k], additional_passwords[k + 1]);
        additional_tags[k] = additional_tags[k + 1];
      }
      additional_password_count--;
      lcd.clear();
      lcd.print("The Da Xoa");
      delay(2000);
      break;
    }
  }
  if (!found) {
    lcd.clear();
    lcd.print("The Khong Hop Le");
    delay(2000);
  }
}

void loop() {
  // Nếu mật khẩu chính và thẻ chính chưa được thiết lập, yêu cầu thiết lập
  if (masterTagUID == "") {
    setInitialPassword(); // Thiết lập mật khẩu chính
    setMasterTag(); // Thiết lập thẻ chính
    return;
  }

  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Vui Long Nhap");

  if (RFIDMode) {
    lcd.setCursor(1, 1);
    lcd.print("Quet The RFID");

    if (!mfrc522.PICC_IsNewCardPresent()) {
      return;
    }
    if (!mfrc522.PICC_ReadCardSerial()) {
      return;
    }

    String tag = "";
    for (byte j = 0; j < mfrc522.uid.size; j++) {
      tag.concat(String(mfrc522.uid.uidByte[j], HEX));
    }
    tag.toUpperCase();

    if (tag == masterTagUID) {
      while (true) {
        char key_pressed = keypad_key.getKey();
        if (key_pressed == '1' && doorOpened) {
          addPasswordMode = true;
          lcd.clear();
          lcd.print("Nhap Mat Khau Moi:");
          i = 0;
          while (i < 8) {
            key_pressed = keypad_key.getKey();
            if (key_pressed && key_pressed != '*' && key_pressed != '#') {
              newPassword[i] = key_pressed;
              i++;
              newPassword[i] = '\0';
              lcd.setCursor(i, 1);
              lcd.print('*');
            } else if (key_pressed == '*') {
              i = 0;
              lcd.clear();
              lcd.print("Nhap Mat Khau Moi:");
            } else if (key_pressed == '#') {
              addPassword();
              break;
            }
          }
          break;
        } else if (key_pressed == '2' && doorOpened) {
          deleteTagMode = true;
          lcd.clear();
          lcd.print("Quet The Can Xoa:");
          while (!mfrc522.PICC_IsNewCardPresent() || !mfrc522.PICC_ReadCardSerial());
          String tagToDelete = "";
          for (byte j = 0; j < mfrc522.uid.size; j++) {
            tagToDelete.concat(String(mfrc522.uid.uidByte[j], HEX));
          }
          tagToDelete.toUpperCase();
          mfrc522.PICC_HaltA();
          lcd.clear();
          lcd.print("Xoa The? *:Co #:Khong");
          while (true) {
            key_pressed = keypad_key.getKey();
            if (key_pressed == '*') {
              deleteTag(tagToDelete);
              break;
            } else if (key_pressed == '#') {
              lcd.clear();
              lcd.print("Huy Xoa The");
              delay(2000);
              break;
            }
          }
          break;
        } else if (key_pressed == '3' && doorOpened) { // Thêm thẻ phụ
          lcd.clear();
          lcd.print("Quet The Phu:");
          while (!mfrc522.PICC_IsNewCardPresent() || !mfrc522.PICC_ReadCardSerial());
          String tagToAdd = "";
          for (byte j = 0; j < mfrc522.uid.size; j++) {
            tagToAdd.concat(String(mfrc522.uid.uidByte[j], HEX));
          }
          tagToAdd.toUpperCase();
          mfrc522.PICC_HaltA();
          addTag(tagToAdd);
          break;
        }
      }
    } else if (checkPassword(tag)) {
      openDoor();
    } else {
      incorrectAttemptCount++;
      if (incorrectAttemptCount >= 3) {
        lockDoor();
        RFIDMode = false;
        incorrectAttemptCount = 0;
      }
    }
  } else {
    char key_pressed = keypad_key.getKey();
    if (key_pressed) {
      password[i] = key_pressed;
      i++;
      if (i == 7) {
        password[i] = '\0';
        if (checkPassword(password)) {
          openDoor();
          i = 0; // Đặt lại biến đếm
        } else {
          incorrectAttemptCount++;
          if (incorrectAttemptCount >= 3) {
            beep(5000)
            lockDoor();
            RFIDMode = true;
            incorrectAttemptCount = 0;
          }
        }
      }
      lcd.setCursor(i, 1);
      lcd.print('*');
    }
  }
}
